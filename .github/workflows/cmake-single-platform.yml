name: CMake on a single platform

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Release]
    container:
      image: nvcr.io/nvidia/tensorrt:23.09-py3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Pre-configure tzdata
      run: |
        export DEBIAN_FRONTEND=noninteractive
        export TZ=America/Los_Angeles
        ln -fs /usr/share/zoneinfo/$TZ /etc/localtime
        apt-get update
        apt-get install -y tzdata
        dpkg-reconfigure --frontend noninteractive tzdata

    - name: Install dependencies
      if: steps.cache-opencv.outputs.cache-hit != 'true' || steps.cache-eigen.outputs.cache-hit != 'true'
      run: |
        apt-get install -y --no-install-recommends libopencv-dev cmake libeigen3-dev libboost-all-dev

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}